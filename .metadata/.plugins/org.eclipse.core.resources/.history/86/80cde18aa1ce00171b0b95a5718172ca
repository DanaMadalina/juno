(defglobal ?*TASK_PRIORITY_1* = 500)
(defglobal ?*TASK_PRIORITY_1* = 500)

(deftemplate animal
    (slot denumire)
    (slot mancare);vegetarian / carnivor
    (slot modViata);diur / nocturn
    (slot mediuViata);acvatic semiacvatic terestru aerian
    (slot modalitateReproducere); pui oua
    (slot zona)
    (slot medieViata)
    (slot putere); 0 la ierbivore 1,2 la carnivore
     )

(assert(animal
        (denumire leu)
        (mancare carnivor)
        (putere 2)))
(assert(animal
        (denumire hiena)
        (mancare carnivor)
        (putere 1)))
(assert(animal
        (denumire caprioara)
        (mancare vegetarian)))
(assert(animal
        (denumire foca)
        (zona polara)))
(assert(animal
        (denumire broasca)
        (mancare vegetarian)
        (modViata diurn)
        (mediuViata semiacvatic)
        (zona mediteraniana)))
(assert(animal
        (denumire ariciMare)
        (mancare vegetarian)
        (modViata diurn)
        (mediuViata semiacvatic)
        (zona mediteraniana)))
(assert(animal
        (denumire ursPolar)
        (zona polara)))

;afisare zona polare
(defrule antipattern
    ?p <- (animal{zona == polara}(denumire $?name))
    =>
    (printout t "Animale polare: " $?name crlf))


(defrule MediuAcvatic
    (declare(salience ?*TASK_PRIORITY_1*))
    ?p <- (animal{mancare == vegetarian && zona == mediteraniana}(denumire ?nume))
    =>
    (printout t "Animalul care este vegetarian si traieste in zona mediteraniana" ?name crlf))
(run)