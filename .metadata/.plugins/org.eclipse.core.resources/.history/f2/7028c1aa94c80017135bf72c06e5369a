;(printout t "Hello world" crlf)
;comentariu
/*COMENTARIU*/
/*
(bind ?a (read));citire de la tastatura
(bind ?b (read))
(if(> ?a ?b) then (printout t ?a crlf)
    else(printout t ?b crlf))
*/
(deftemplate Persoana (multislot nume)(multislot mama)(multislot tata)(multislot casatorit))
;(assert (Persoana(nume Ionela Ionescu)(mama Maria Popescu)(tata Ion Popescu)(casatorit George Ionescu)))
(assert (Persoana(nume Ion Popescu)(mama nil)(tata nil)(casatorit Maria Popescu)))
(assert (Persoana(nume Maria Popescu)(mama nil)(tata nil)(casatorit Ion Popescu)))
(assert (Persoana(nume Cristian Popescu)(mama Maria Popescu)(tata Ion Popescu)(casatorit Elena Popescu)))
(assert (Persoana(nume Elena Popescu)(mama nil)(tata nil)(casatorit Cristian Popescu)))
(assert (Persoana(nume Adrian Popescu)(mama Maria Popescu)(tata Ion Popescu)(casatorit Cristina Popescu)))
(assert (Persoana(nume Cristina Popescu)(mama nil)(tata nil)(casatorit Adrian Popescu)))
(assert (Persoana(nume Tudor Popescu)(mama Cristina Popescu)(tata Adrian Popescu)(casatorit nil)))
(assert (Persoana(nume Ciprian Popescu)(mama Maria Popescu)(tata Ion Popescu)(casatorit Adriana Popescu)))
(assert (Persoana(nume Adriana Popescu)(mama nil)(tata nil)(casatorit Ciprian Popescu)))
(assert (Persoana(nume Maria Andreescu)(mama Maria Popescu)(tata Ion Popescu)(casatorit Petre Andreescu)))
(assert (Persoana(nume Petre Andreescu)(mama nil)(tata nil)(casatorit Maria Andreescu)))
(assert (Persoana(nume Ionel Andreescu)(mama Maria Andreescu)(tata Petre Andreescu)(casatorit nil)))


/*(deffacts Familie
    (Persoana(nume Ion Popescu)(mama nil)(tata nil)(casatorit Maria Popescu))
    (Persoana(nume Maria Popescu)(mama nil)(tata nil)(casatorit Ion Popescu))
    (Persoana(nume Cristian Popescu)(mama Maria Popescu)(tata Ion Popescu)(casatorit Elena Popescu))
    (Persoana(nume Elena Popescu)(mama nil)(tata nil)(casatorit Cristian Popescu))
    (Persoana(nume Adrian Popescu)(mama Maria Popescu)(tata Ion Popescu)(casatorit Cristina Popescu))
    (Persoana(nume Cristina Popescu)(mama nil)(tata nil)(casatorit Adrian Popescu))
    (Persoana(nume Tudor Popescu)(mama Cristina Popescu)(tata Adrian Popescu)(casatorit nil))
    (Persoana(nume Ciprian Popescu)(mama Maria Popescu)(tata Ion Popescu)(casatorit Adriana Popescu))
    (Persoana(nume Adriana Popescu)(mama nil)(tata nil)(casatorit Ciprian Popescu))
    (Persoana(nume Maria Andreescu)(mama Maria Popescu)(tata Ion Popescu)(casatorit Petre Andreescu))
    (Persoana(nume Petre Andreescu)(mama nil)(tata nil)(casatorit Maria Andreescu))
    (Persoana(nume Ionel Andreescu)(mama Maria Andreescu)(tata Petre Andreescu)(casatorit nil))
    )(reset)
*/
(facts)

(defrule regula2
    (Persoana(nume $?x)(mama Maria Popescu))
    =>
    (printout t "Maria Popescu este mama: " $?x crlf))
(facts)
(run)

(deftemplate Persoane (slot nume)(slot prenume)(multislot mama)(multislot tata)(multislot casatorit))
(assert (Persoane(nume Ion)(prenume Ion)(mama nil)(tata nil)(casatorit Maria Popescu)))
(assert (Persoane(nume Popescu)(prenume Maria)(mama nil)(tata nil)(casatorit Ion Popescu)))
(assert (Persoane(nume  Popescu)(prenume Cristian)(mama Maria Popescu)(tata Ion Popescu)(casatorit Elena Popescu)))
(assert (Persoane(nume  Popescu)(prenume Elena)(mama nil)(tata nil)(casatorit Cristian Popescu)))
(assert (Persoane(nume  Popescu)(prenume Adrian)(mama Maria Popescu)(tata Ion Popescu)(casatorit Cristina Popescu)))
(assert (Persoane(nume  Popescu)(prenume Cristina)(mama nil)(tata nil)(casatorit Adrian Popescu)))
(assert (Persoane(nume  Popescu)(prenume Tudor)(mama Cristina Popescu)(tata Adrian Popescu)(casatorit nil)))
(assert (Persoane(nume  Popescu)(prenume Ciprian)(mama Maria Popescu)(tata Ion Popescu)(casatorit Adriana Popescu)))
(assert (Persoane(nume  Popescu)(prenume Adriana)(mama nil)(tata nil)(casatorit Ciprian Popescu)))
(assert (Persoane(nume  Andreescu)(prenume Maria)(mama Maria Popescu)(tata Ion Popescu)(casatorit Petre Andreescu)))
(assert (Persoane(nume  Andreescu)(prenume Petre)(mama nil)(tata nil)(casatorit Maria Andreescu)))
(assert (Persoane(nume  Andreescu)(prenume Ionel)(mama Maria Andreescu)(tata Petre Andreescu)(casatorit nil)))

(facts)

(defrule regula3
    (Persoane(nume $?x)(prenume $?y)(mama Maria Popescu))
    =>
    (printout t "Maria Popescu este mama: " $?x $?y crlf))
(facts)
(run)

(defrule regula4
    (Persoane(mama $?x){nume == Popescu && prenume == Ciprian})
    =>
    (printout t "Rezultat" $?x crlf))
(facts)
(run)

(defrule frati
    (Persoana(nume $?x)(mama $?y1)(tata $?z1))
    (Persoana(nume $?l)(mama $?y1)(tata $?z1))
    =>
    (if (neq $?x $?l)then(printout t $?x "Este frate/sora cu " $?l crlf))
    )
(facts)
(run)
